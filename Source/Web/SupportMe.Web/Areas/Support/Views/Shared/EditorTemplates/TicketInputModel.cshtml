@using Kendo.Mvc.UI
@using SupportMe.Data.Models
@model SupportMe.Web.Areas.Support.ViewModels.Ticket.TicketInputModel

<div class="form-group">
    @Html.LabelFor(m => m.Priority, new { @class = "col-md-2 control-label" })
    <div class="col-lg-10">
        @Html.Kendo().DropDownListFor(m => m.Priority).BindTo(Enum.GetNames(typeof(TicketPriority)).ToList())
        @Html.ValidationMessageFor(m => m.Priority, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(m => m.State, new { @class = "col-md-2 control-label" })
    <div class="col-md-10">
        @Html.Kendo().DropDownListFor(m => m.State).BindTo(Enum.GetNames(typeof(TicketState)).ToList())
        @Html.ValidationMessageFor(m => m.State, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(m => m.Type, new { @class = "col-md-2 control-label" })
    <div class="col-md-10">
        @Html.Kendo().DropDownListFor(m => m.Type).BindTo(Enum.GetNames(typeof(TicketType)).ToList())
        @Html.ValidationMessageFor(m => m.Type, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(m => m.LocationId, new { @class = "col-md-2 control-label" })
    <div class="col-md-10">
        @(Html.Kendo()
              .DropDownListFor(m => m.LocationId)
              .DataValueField("Id")
              .DataTextField("Name")
              .DataSource(data =>
              {
                  data.Read("GetDropDown", "Location", new { area = string.Empty });
              })
              .AutoBind(false))
        @Html.ValidationMessageFor(m => m.LocationId, "", new { @class = "text-danger" })
    </div>
</div>

@Html.EditorFor(m => m.Title)
